#!/bin/bash

# enable extended pattern matching
shopt -s extglob

# fail on errors
set -o errexit
set -o pipefail

target_version=${1?Please set the target version}

# diagnostic tracing
set -xv

# remove any dev suffix
case $target_version in
    *-dev)
	prefix=dev.
	target_version=${target_version%-dev}
	;;
esac

case $target_version in
#    experimental)
#        essglobal_url
#        essglobal_url=http://purl.org/essglobal/experimental/;;
#    ise)
#        subdir=experimental/essglobal
#        essglobal_url=http://purl.org/solidarityeconomics/$subdir/
#        ;;
    1.1) # Early version, unsure of period of use
        essglobal_url=http://purl.org/essglobal/
        ;;
    sea) # Used until about March 2021
        subdir=essglobal/V2a
        essglobal_url=https://w3id.solidarityeconomy.coop/$subdir/
        ;;
    +([0-9]).+([0-9])?(.+([0-9]))) # x.y or x.y.z
        subdir=essglobal/$target_version
        essglobal_url=https://${prefix}lod.coop/$subdir/
        ;;
    *) echo "Unrecognised target version: $target_version"
       exit 1;;
	esac
	
orig_essglobal_url=http://purl.org/essglobal/
output_dir=generated/$target_version

# Clean out old output
rm -rf $output_dir

# Recreate dirs
mkdir -p $output_dir/{vocab,standard,html}-content

# Rewrite $orig_essglobal_url to $essglobal_url in template SKOS, HTML and TTL files
for src in ../vocabs/{vocab/*.ttl,standard/*.ttl,html/essglobal.html}; do
    # extract the content name from ../vocabs/<content>/*.*
    content=${src#../vocabs/}
    content=${content%/*}
    filename=${src##*/}
    dest=$output_dir/$content-content/$filename
    # Warn if expected pattern is not present
    grep -q "$orig_essglobal_url" $src || cat >&2 <<EOF
$orig_essglobal_url not found in file $src.
Perhaps there's an error the definition of orig_essglobal_url in $0?
EOF

    sed "s|$orig_essglobal_url|$essglobal_url|g" $src > $dest
done

# Copy css verbatim
cp ../vocabs/html/*.css $output_dir/html-content/

# Translate TTL into RDF/SKOS
for src in $output_dir/vocab-content/*.ttl; do
    rapper -i turtle -o rdfxml-abbrev $src > ${src%.ttl}.rdf
done
for src in $output_dir/standard-content/*.ttl; do
    rapper -i turtle -o rdfxml-abbrev $src > ${src%.ttl}.skos
done

# Translate TTL into HTML
for src in $output_dir/{vocab-content,standard-content}/*.ttl; do
    rapper -i turtle -o html $src > ${src%.ttl}.html
done

# Generate the .htaccess
ruby generate-htaccess.rb /$subdir/ vocab standard vocab-content/essglobal-vocab.{rdf,ttl} standard-content html-content/essglobal.html > $output_dir/.htaccess

# Generate a warning not to edit
date=$(date -Is)
modified=$(git diff-index --quiet HEAD && echo "-modified")
commit_id=$(git rev-parse --short HEAD)
who="$USER ($(getent passwd $USER | cut -d ':' -f 5 | cut -d ',' -f 1))"
cat > $output_dir/DO_NOT_EDIT_HERE.txt <<EOF
This directory and subdirectories are generated from a script.
Any changes you make here will be lost next time that script is run.
Files generated for target version $target_version can be found in directory $output_dir.

Generated on: $date
Source commit: $commit_id$modified
Generated by: $who
EOF
